services:
  frontend:
    build:
      context: ./vcarder-fe
      dockerfile: Dockerfile
    ports:
      - "80:80"
    # depends_on:
    #   - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # backend:
  #   build:
  #     context: ./vcarder-be
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./vcarder-be/src/uploads:/app/uploads
  #   env_file:
  #     - ./vcarder-be/.env
  #   depends_on:
  #     - db
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - vcarder-be/.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-user} -d ${DB_NAME:-vcarder}"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
